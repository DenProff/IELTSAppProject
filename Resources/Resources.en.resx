<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="addToCollection" xml:space="preserve">
    <value>Add to collection</value>
  </data>
  <data name="answerFileMistake" xml:space="preserve">
    <value>Recording file not found, we apologize for the error</value>
  </data>
  <data name="answerIsSaved" xml:space="preserve">
    <value>Answer saved</value>
  </data>
  <data name="checkAll" xml:space="preserve">
    <value>Check All</value>
  </data>
  <data name="chiLanguage" xml:space="preserve">
    <value>Chinese  </value>
  </data>
  <data name="chooseCurrentLanguage" xml:space="preserve">
    <value>Select the language you want to use in the app  </value>
  </data>
  <data name="chooseLanguage" xml:space="preserve">
    <value>Language selection</value>
  </data>
  <data name="chooseModeTextBlock" xml:space="preserve">
    <value>Select the desired mode</value>
  </data>
  <data name="convertBTN" xml:space="preserve">
    <value>Convert into docx</value>
  </data>
  <data name="describeTextBlockFirstTestPage" xml:space="preserve">
    <value>We recommend starting with a placement test to gather statistics and identify your weak areas. If you've already taken the test, you can proceed to practice specific tasks</value>
  </data>
  <data name="engLanguage" xml:space="preserve">
    <value>English  </value>
  </data>
  <data name="EnterAnswerHereMessage" xml:space="preserve">
    <value>Enter your answer here:</value>
  </data>
  <data name="espLanguage" xml:space="preserve">
    <value>Spanish  </value>
  </data>
  <data name="fewTimeBeforeExam" xml:space="preserve">
    <value>I have little time before the exam!</value>
  </data>
  <data name="findForPupils" xml:space="preserve">
    <value>Find tasks for your students</value>
  </data>
  <data name="help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="IELTSvariants" xml:space="preserve">
    <value>IELTS test versions</value>
  </data>
  <data name="myCollections" xml:space="preserve">
    <value>My task collections</value>
  </data>
  <data name="myMistakes" xml:space="preserve">
    <value>My mistakes</value>
  </data>
  <data name="myStatistics" xml:space="preserve">
    <value>My statistics</value>
  </data>
  <data name="nothingIsPlaying" xml:space="preserve">
    <value>Nothing is currently playing</value>
  </data>
  <data name="notSolveEnterVariantBTN" xml:space="preserve">
    <value>Custom practice mode (skip placement test)</value>
  </data>
  <data name="PDFmistake" xml:space="preserve">
    <value>Failed to open PDF with criteria</value>
  </data>
  <data name="playIdealAnswer" xml:space="preserve">
    <value>Play model answer</value>
  </data>
  <data name="playingWasStopped" xml:space="preserve">
    <value>Playback stopped</value>
  </data>
  <data name="playOrPause" xml:space="preserve">
    <value>Play/Pause</value>
  </data>
  <data name="playUserAnswer" xml:space="preserve">
    <value>Play your recording</value>
  </data>
  <data name="prevPage" xml:space="preserve">
    <value>Go back</value>
  </data>
  <data name="recomendedTime" xml:space="preserve">
    <value>Recommended time:</value>
  </data>
  <data name="recordAnswerFirst" xml:space="preserve">
    <value>Record your answer first</value>
  </data>
  <data name="recordingEnableOnlyAfterSettingAnswer" xml:space="preserve">
    <value>Recording can be played only after adding an answer.</value>
  </data>
  <data name="recordingInProgress" xml:space="preserve">
    <value>Recording in progress</value>
  </data>
  <data name="recordingNotStartedMessage" xml:space="preserve">
    <value>Recording hasn't started yet.</value>
  </data>
  <data name="ResAndMaxPointsMessage" xml:space="preserve">
    <value>Your result and model answer:</value>
  </data>
  <data name="rusLanguage" xml:space="preserve">
    <value>Russian  </value>
  </data>
  <data name="SeeEvaluationCriteria" xml:space="preserve">
    <value>View scoring criteria</value>
  </data>
  <data name="solveEnterVariantBTN" xml:space="preserve">
    <value>Take the placement test</value>
  </data>
  <data name="solveIELTSformat" xml:space="preserve">
    <value>Practice full IELTS format tests</value>
  </data>
  <data name="startOrContinuePreporation" xml:space="preserve">
    <value>Start (continue) preparation</value>
  </data>
  <data name="startRecording" xml:space="preserve">
    <value>Start recording</value>
  </data>
  <data name="stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="tasksByType" xml:space="preserve">
    <value>Tasks by section (Listening, Reading, Speaking, Writing)</value>
  </data>
  <data name="taskType" xml:space="preserve">
    <value>Task types</value>
  </data>
  <data name="UserAndIdealAnswersAreEnable" xml:space="preserve">
    <value>You can listen to both your answer and the model answer</value>
  </data>
  <data name="welcomeTextBlock" xml:space="preserve">
    <value>Welcome to the IELTS exam preparation app</value>
  </data>
</root>